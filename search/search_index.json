{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Routerpi Tutorial for setting up raspberry pi as a wired and wireless router with wireguard vpn. For repository of these insturctions see github routerpi Components Raspberry Pi Lite USB Image Ethernet to USB Dongle Autossh reverse ssh tunnel between raspberry pi and digital ocean server for maintenance. Hostapd for settting up a wireless Access Point Dnsmasq for assigning a static IP to the subnet Dhcpcd for creating dhcp address assignments to client subnet IPtables for creating a NAT Systemd-Netword for creating a bridge between the client wifi and ethernet NICs Wireguard to create secure encrypted VPN tunnel between multiple Routerpi's and other devices. Architecture","title":"Home"},{"location":"#welcome-to-routerpi","text":"Tutorial for setting up raspberry pi as a wired and wireless router with wireguard vpn. For repository of these insturctions see github routerpi","title":"Welcome to Routerpi"},{"location":"#components","text":"Raspberry Pi Lite USB Image Ethernet to USB Dongle Autossh reverse ssh tunnel between raspberry pi and digital ocean server for maintenance. Hostapd for settting up a wireless Access Point Dnsmasq for assigning a static IP to the subnet Dhcpcd for creating dhcp address assignments to client subnet IPtables for creating a NAT Systemd-Netword for creating a bridge between the client wifi and ethernet NICs Wireguard to create secure encrypted VPN tunnel between multiple Routerpi's and other devices.","title":"Components"},{"location":"#architecture","text":"","title":"Architecture"},{"location":"autossh/","text":"Autossh Create a \"back door\" reverse ssh tunnel between routerpi and digital ocean server. The tunnel is initiated/created from the raspberry pi, but is accessed from the digocean server. This tunnel will allow your pc to use the digocean server as a \"jump point\" to the raspberry pi routerpi inside your home firewall. Because the reverse ssh tunnel is created from routerpi, you don't have to open pinholes in your home firewall to access it from the outside. Copy sshkeys from linux pc to routerpi alex@xanadu_pc:~$ sudo scp .ssh/dopriveatesshkeyfile pi@routerpi.local:~/.ssh Login to routerpi alex@xanadu_pc:~$ ssh pi@routerpi.local # pi will ask for password pi@routerpi:~$ Test ssh function from routerpi to digocean server pi@routerpi:~$ ssh -i ~/.ssh/dopriveatesshkeyfile geddy@211.211.211.211 This should log you into digital ocean server. geddy@211.211.211.211:~$ Now exit back to routerpi geddy@211.211.211.211:~$ exit Install Autossh on Rpi pi@routerpi:~$ sudo apt install autossh pi@routerpi:~$ sudo nano /lib/systemd/system/autossh-digocean-tunnel.service #this service establishes a reverse tunnel with the digital ocean server # [Unit] Description=AutoSSH tunnel service digital ocean 211.211.211.211 on local port 2222 Wants=network-online.target After=network-online.target [Service] Type=simple User=pi Environment=\"AUTOSSH_GATETIME=0\" ExecStart= ExecStart=/usr/bin/autossh -M 0 -o \"ExitOnForwardFailure yes\" -o \"ServerAliveInterval 30\" -o \"ServerAliveCountMax 3\" -N -R 2222:localhost:22 geddy@211.211.211.211 -i /home/pi/.ssh/dopriveatesshkeyfile [Install] WantedBy=multi-user.target pi@routerpi:~$ sudo systemctl daemon-reload pi@routerpi:~$ sudo systemctl enable autossh-digocean-tunnel pi@routerpi:~$ sudo systemctl start autossh-digocean-tunnel Test reverse ssh tunnel From linux pc to digocean server to tnfs pi server alex@xanadu_pc:~$ ssh tnfs geddy@digocean_server:~$ ssh -p 2222 pi@localhost pi@routerpi:~$ You now are logged into your raspberry pi inside your home network!","title":"Autossh"},{"location":"autossh/#autossh","text":"","title":"Autossh"},{"location":"autossh/#_1","text":"Create a \"back door\" reverse ssh tunnel between routerpi and digital ocean server. The tunnel is initiated/created from the raspberry pi, but is accessed from the digocean server. This tunnel will allow your pc to use the digocean server as a \"jump point\" to the raspberry pi routerpi inside your home firewall. Because the reverse ssh tunnel is created from routerpi, you don't have to open pinholes in your home firewall to access it from the outside.","title":"&nbsp;"},{"location":"autossh/#copy-sshkeys","text":"from linux pc to routerpi","title":"Copy sshkeys"},{"location":"autossh/#_2","text":"alex@xanadu_pc:~$ sudo scp .ssh/dopriveatesshkeyfile pi@routerpi.local:~/.ssh Login to routerpi","title":""},{"location":"autossh/#_3","text":"alex@xanadu_pc:~$ ssh pi@routerpi.local # pi will ask for password pi@routerpi:~$","title":""},{"location":"autossh/#test-ssh-function","text":"from routerpi to digocean server","title":"Test ssh function"},{"location":"autossh/#_4","text":"pi@routerpi:~$ ssh -i ~/.ssh/dopriveatesshkeyfile geddy@211.211.211.211 This should log you into digital ocean server.","title":""},{"location":"autossh/#_5","text":"geddy@211.211.211.211:~$ Now exit back to routerpi","title":""},{"location":"autossh/#_6","text":"geddy@211.211.211.211:~$ exit","title":""},{"location":"autossh/#install-autossh","text":"on Rpi","title":"Install Autossh"},{"location":"autossh/#_7","text":"pi@routerpi:~$ sudo apt install autossh pi@routerpi:~$ sudo nano /lib/systemd/system/autossh-digocean-tunnel.service #this service establishes a reverse tunnel with the digital ocean server # [Unit] Description=AutoSSH tunnel service digital ocean 211.211.211.211 on local port 2222 Wants=network-online.target After=network-online.target [Service] Type=simple User=pi Environment=\"AUTOSSH_GATETIME=0\" ExecStart= ExecStart=/usr/bin/autossh -M 0 -o \"ExitOnForwardFailure yes\" -o \"ServerAliveInterval 30\" -o \"ServerAliveCountMax 3\" -N -R 2222:localhost:22 geddy@211.211.211.211 -i /home/pi/.ssh/dopriveatesshkeyfile [Install] WantedBy=multi-user.target","title":""},{"location":"autossh/#_8","text":"pi@routerpi:~$ sudo systemctl daemon-reload pi@routerpi:~$ sudo systemctl enable autossh-digocean-tunnel pi@routerpi:~$ sudo systemctl start autossh-digocean-tunnel","title":""},{"location":"autossh/#test-reverse-ssh-tunnel","text":"From linux pc to digocean server to tnfs pi server","title":"Test reverse ssh tunnel"},{"location":"autossh/#_9","text":"alex@xanadu_pc:~$ ssh tnfs geddy@digocean_server:~$ ssh -p 2222 pi@localhost pi@routerpi:~$ You now are logged into your raspberry pi inside your home network!","title":""},{"location":"dhcpcd/","text":"DHCPCD sudo nano /etc/dhcpcd.conf denyinterfaces wlan0 eth1 interface br0 static ip_address=192.168.9.1/24 nohook wpa_supplicant","title":"Dhcpcd"},{"location":"dhcpcd/#dhcpcd","text":"sudo nano /etc/dhcpcd.conf","title":"DHCPCD"},{"location":"dhcpcd/#_1","text":"denyinterfaces wlan0 eth1 interface br0 static ip_address=192.168.9.1/24 nohook wpa_supplicant","title":""},{"location":"dnsmasq/","text":"DNSmasq DNSmasq uses dhcp to provide ip addresses to clients sudo apt install dnsmasq sudo nano /etc/dnsmasq.conf #interface=br0 # Listening interface interface=br0 dhcp-range=192.168.9.2,192.168.9.20,255.255.255.0,24h # Pool of IP addresses served via DHCP domain=wlan # Local wireless DNS domain address=/gw.wlan/192.168.9.1 # Alias for this router","title":"Dnsmasq"},{"location":"dnsmasq/#dnsmasq","text":"DNSmasq uses dhcp to provide ip addresses to clients","title":"DNSmasq"},{"location":"dnsmasq/#_1","text":"sudo apt install dnsmasq sudo nano /etc/dnsmasq.conf","title":""},{"location":"dnsmasq/#_2","text":"#interface=br0 # Listening interface interface=br0 dhcp-range=192.168.9.2,192.168.9.20,255.255.255.0,24h # Pool of IP addresses served via DHCP domain=wlan # Local wireless DNS domain address=/gw.wlan/192.168.9.1 # Alias for this router","title":""},{"location":"ethernetdongle/","text":"Ethernet Dongle I used the TP-Link USB3.0 to Gigabit Adapter USB mode issue However, when used with a RapsberryPi4, eth1 is not seen at reboot LSUSB shows the device comes up in CD-ROM mode USB_MODESWITCH solution Add the below file which at bootup resets the dongle with the \"usb-modeswitch\" utility sudo nano /etc/udev/rules.d/98-tplinku300.rules ACTION==\"add\", SUBSYSTEM==\"usb\", ENV{ID_VENDOR_ID}==\"2357\", ENV{ID_MODEL_ID}==\"0600\", RUN+=\"/usr/sbin/usb_modeswitch -v 2357 -p 0600 -Q -R\" sudo reboot Success! We can now see eth1 and also that the adapter is in ethernet mode","title":"Ethernet Dongle"},{"location":"ethernetdongle/#ethernet-dongle","text":"I used the TP-Link USB3.0 to Gigabit Adapter","title":"Ethernet Dongle"},{"location":"ethernetdongle/#_1","text":"","title":""},{"location":"ethernetdongle/#usb-mode-issue","text":"However, when used with a RapsberryPi4, eth1 is not seen at reboot LSUSB shows the device comes up in CD-ROM mode","title":"USB mode issue"},{"location":"ethernetdongle/#usb_modeswitch-solution","text":"Add the below file which at bootup resets the dongle with the \"usb-modeswitch\" utility","title":"USB_MODESWITCH solution"},{"location":"ethernetdongle/#_2","text":"sudo nano /etc/udev/rules.d/98-tplinku300.rules","title":""},{"location":"ethernetdongle/#_3","text":"ACTION==\"add\", SUBSYSTEM==\"usb\", ENV{ID_VENDOR_ID}==\"2357\", ENV{ID_MODEL_ID}==\"0600\", RUN+=\"/usr/sbin/usb_modeswitch -v 2357 -p 0600 -Q -R\"","title":""},{"location":"ethernetdongle/#_4","text":"sudo reboot Success! We can now see eth1 and also that the adapter is in ethernet mode","title":""},{"location":"hostapd/","text":"Hostapd Hostapd is use to create a wireless accesspoint for clients to wirelessly connect to the raspberry pi. Both the Raspberry Pi3 and Raspberry Pi4 have built in wifi so don't require an external usb2wifi dongle. sudo apt install hostapd sudo nano /etc/hostapd/hostapd.conf country_code=US interface=wlan0 bridge=br0 ssid=routerpi hw_mode=g channel=4 ieee80211d=1 ieee80211n=1 logger_syslog=-1 macaddr_acl=0 auth_algs=1 ignore_broadcast_ssid=0 wpa=2 wpa_passphrase=stoutlore wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP rsn_pairwise=CCMP sudo systemctl unmask hostapd sudo systemctl enable hostapd sudo systemctl start hostapd","title":"Hostapd"},{"location":"hostapd/#hostapd","text":"Hostapd is use to create a wireless accesspoint for clients to wirelessly connect to the raspberry pi. Both the Raspberry Pi3 and Raspberry Pi4 have built in wifi so don't require an external usb2wifi dongle.","title":"Hostapd"},{"location":"hostapd/#_1","text":"sudo apt install hostapd sudo nano /etc/hostapd/hostapd.conf","title":""},{"location":"hostapd/#_2","text":"country_code=US interface=wlan0 bridge=br0 ssid=routerpi hw_mode=g channel=4 ieee80211d=1 ieee80211n=1 logger_syslog=-1 macaddr_acl=0 auth_algs=1 ignore_broadcast_ssid=0 wpa=2 wpa_passphrase=stoutlore wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP rsn_pairwise=CCMP","title":""},{"location":"hostapd/#_3","text":"sudo systemctl unmask hostapd sudo systemctl enable hostapd sudo systemctl start hostapd","title":""},{"location":"iptables/","text":"IPtables sudo DEBIAN_FRONTEND=noninteractive apt install -y netfilter-persistent iptables-persistent sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE sudo netfilter-persistent save sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1","title":"Iptables"},{"location":"iptables/#iptables","text":"sudo DEBIAN_FRONTEND=noninteractive apt install -y netfilter-persistent iptables-persistent sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE sudo netfilter-persistent save sudo nano /etc/sysctl.conf","title":"IPtables"},{"location":"iptables/#_1","text":"net.ipv4.ip_forward=1","title":""},{"location":"raspios/","text":"Install Raspberry PI OS image on Raspberry Pi Follow Getting Started instructions on official raspberrypi.com website Strongly recommend using the Raspberry PI Imager and selecting \"Raspberry Pi OS Lite (32-bit)\" select \"Raspberry Pi OS (other)\" select \"Raspberry Pi OS Lite (32-bit)\" Launch Raspi-Config from raspberry pi terminal pi@raspberrypi:~$ sudo raspi-config System Options you may want to change Password and Hostname Interface Options enable SSH for remote access Localization Options Under Locale, use spacebar to deselect \"en_GB.UTF-8 UTF-8\" and select \"en_US.UTF-8 UTF-8 none Timezone US As we are favored enough to live in the The Republic of Texas Keyboard Generic 105-key PC (intl.) Other English (US) Scroll up to English (US) Default \"Enter\" the 2 screens then Finish Remote ssh login from PC terminal you can now remote login to your routerpi alex@xanadu_pc:~$ ssh pi@routerpi.local pi@routerpi:~$ Update and Upgrade sudo apt update sudo apt upgrade","title":"Raspi OS Image"},{"location":"raspios/#install-raspberry-pi-os-image","text":"on Raspberry Pi","title":"Install Raspberry PI OS image"},{"location":"raspios/#_1","text":"Follow Getting Started instructions on official raspberrypi.com website Strongly recommend using the Raspberry PI Imager and selecting \"Raspberry Pi OS Lite (32-bit)\" select \"Raspberry Pi OS (other)\" select \"Raspberry Pi OS Lite (32-bit)\"","title":"&nbsp;"},{"location":"raspios/#launch-raspi-config","text":"from raspberry pi terminal","title":"Launch Raspi-Config"},{"location":"raspios/#_2","text":"pi@raspberrypi:~$ sudo raspi-config","title":""},{"location":"raspios/#system-options","text":"you may want to change Password and Hostname","title":"System Options"},{"location":"raspios/#interface-options","text":"enable SSH for remote access","title":"Interface Options"},{"location":"raspios/#localization-options","text":"","title":"Localization Options"},{"location":"raspios/#_3","text":"Under Locale, use spacebar to deselect \"en_GB.UTF-8 UTF-8\" and select \"en_US.UTF-8 UTF-8 none Timezone US As we are favored enough to live in the The Republic of Texas Keyboard Generic 105-key PC (intl.) Other English (US) Scroll up to English (US) Default \"Enter\" the 2 screens then Finish","title":""},{"location":"raspios/#remote-ssh-login","text":"from PC terminal you can now remote login to your routerpi","title":"Remote ssh login"},{"location":"raspios/#_4","text":"alex@xanadu_pc:~$ ssh pi@routerpi.local pi@routerpi:~$","title":""},{"location":"raspios/#update-and-upgrade","text":"","title":"Update and Upgrade"},{"location":"raspios/#_5","text":"sudo apt update sudo apt upgrade","title":""},{"location":"systemdnetworkd/","text":"Systemd-Networkd cd /etc/systemd/network sudo nano br0.netdev [NetDev] Name=br0 Kind=bridge sudo nano br0.network [Match] Name=eth1 [Network] Bridge=br0 sudo systemctl enable systemd-networkd","title":"Systemd-Networkd"},{"location":"systemdnetworkd/#systemd-networkd","text":"cd /etc/systemd/network sudo nano br0.netdev","title":"Systemd-Networkd"},{"location":"systemdnetworkd/#_1","text":"[NetDev] Name=br0 Kind=bridge","title":""},{"location":"systemdnetworkd/#_2","text":"sudo nano br0.network","title":""},{"location":"systemdnetworkd/#_3","text":"[Match] Name=eth1 [Network] Bridge=br0","title":""},{"location":"systemdnetworkd/#_4","text":"sudo systemctl enable systemd-networkd","title":""},{"location":"wireguard/","text":"Wireguard Install wireguard digital ocean server geddy@tnfs_digocean:~$ sudo apt install wireguard tnfspi pi@routerpi~$ sudo apt install wireguard Generate key-pairs digital ocean server geddy@tnfs_digocean:~$ wg genkey |sudo tee private.key geddy@tnfs_digocean:~$ cat private.key|wg pubkey|sudo tee public.key routerpi pi@routerpi:~$ wg genkey |sudo tee private.key pi@routerpi:~$ cat private.key|wg pubkey|sudo tee public.key Create wireguard config files digital ocean server geddy@digocean:~$ sudo nano /etc/wireguard/wg0.conf [interface] PrivateKey = <digocean private key> Address = 10.14.0.1/24 ListenPort=51820 PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE #tnfspi [Peer] Publickey= <routerpi public key> AllowedIPs=10.14.0.9/32 routerpi pi@routerpi:~$ sudo nano /etc/wireguard/wg0.conf [Interface] Privatekey = <routerpi privatekey> Address = 10.14.0.9/24 [Peer] Publickey = <digocean private key> Endpoint = <digocean status ip address>:51820 AllowedIPs = 10.14.0.0/24 PersistentKeepalive = 25 Enable port forwarding digital ocean server geddy@digocean:~$ sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 geddy@digocean:~$ sudo sysctl -p /etc/sysctl.conf # restart service geddy@digocean:~$ sysctl net.ipv4.ip_forward # verifies ip forwarding is enabled. should return net.ipv4.ip_foward=1 routerpi pi@routerpi:~$ sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 pi@routerpi:~$ sudo sysctl -p /etc/sysctl.conf # restart service pi@routerpi:~$ sysctl net.ipv4.ip_forward # verifies ip forwarding is enabled. should return net.ipv4.ip_foward=1 Open server port 51820 geddy@digocean:~$ sudo ufw allow 51820 Start Wireguard digital ocean server geddy@digocean:~$ sudo systemctl start wg-quick@wg0.service geddy@digocean:~$ sudo systemctl enable wg-quick@wg0.service routerpi pi@routerpi:~$ sudo systemctl start wg-quick@wg0.service pi@routerpi:~$ sudo systemctl enable wg-quick@wg0.service Login to server from client pi@routerpi:~$ ssh -i .ssh/dopriveatesshkeyfile geddy@10.14.1.1 geddy@digocean:~$ Login to client from server geddy@digocean:~$ ssh pi@10.14.1.2 pi@routerpi:~$","title":"Wireguard"},{"location":"wireguard/#wireguard","text":"","title":"Wireguard"},{"location":"wireguard/#_1","text":"","title":"&nbsp;"},{"location":"wireguard/#install-wireguard","text":"digital ocean server","title":"Install wireguard"},{"location":"wireguard/#_2","text":"geddy@tnfs_digocean:~$ sudo apt install wireguard tnfspi","title":""},{"location":"wireguard/#_3","text":"pi@routerpi~$ sudo apt install wireguard","title":""},{"location":"wireguard/#generate-key-pairs","text":"digital ocean server","title":"Generate key-pairs"},{"location":"wireguard/#_4","text":"geddy@tnfs_digocean:~$ wg genkey |sudo tee private.key geddy@tnfs_digocean:~$ cat private.key|wg pubkey|sudo tee public.key routerpi","title":""},{"location":"wireguard/#_5","text":"pi@routerpi:~$ wg genkey |sudo tee private.key pi@routerpi:~$ cat private.key|wg pubkey|sudo tee public.key","title":""},{"location":"wireguard/#create-wireguard-config-files","text":"digital ocean server","title":"Create wireguard config files"},{"location":"wireguard/#_6","text":"geddy@digocean:~$ sudo nano /etc/wireguard/wg0.conf [interface] PrivateKey = <digocean private key> Address = 10.14.0.1/24 ListenPort=51820 PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE #tnfspi [Peer] Publickey= <routerpi public key> AllowedIPs=10.14.0.9/32 routerpi","title":""},{"location":"wireguard/#_7","text":"pi@routerpi:~$ sudo nano /etc/wireguard/wg0.conf [Interface] Privatekey = <routerpi privatekey> Address = 10.14.0.9/24 [Peer] Publickey = <digocean private key> Endpoint = <digocean status ip address>:51820 AllowedIPs = 10.14.0.0/24 PersistentKeepalive = 25","title":""},{"location":"wireguard/#enable-port-forwarding","text":"digital ocean server","title":"Enable port forwarding"},{"location":"wireguard/#_8","text":"geddy@digocean:~$ sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 geddy@digocean:~$ sudo sysctl -p /etc/sysctl.conf # restart service geddy@digocean:~$ sysctl net.ipv4.ip_forward # verifies ip forwarding is enabled. should return net.ipv4.ip_foward=1 routerpi","title":""},{"location":"wireguard/#_9","text":"pi@routerpi:~$ sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 pi@routerpi:~$ sudo sysctl -p /etc/sysctl.conf # restart service pi@routerpi:~$ sysctl net.ipv4.ip_forward # verifies ip forwarding is enabled. should return net.ipv4.ip_foward=1","title":""},{"location":"wireguard/#open-server-port-51820","text":"geddy@digocean:~$ sudo ufw allow 51820","title":"Open server port 51820"},{"location":"wireguard/#start-wireguard","text":"digital ocean server","title":"Start Wireguard"},{"location":"wireguard/#_10","text":"geddy@digocean:~$ sudo systemctl start wg-quick@wg0.service geddy@digocean:~$ sudo systemctl enable wg-quick@wg0.service routerpi","title":""},{"location":"wireguard/#_11","text":"pi@routerpi:~$ sudo systemctl start wg-quick@wg0.service pi@routerpi:~$ sudo systemctl enable wg-quick@wg0.service","title":""},{"location":"wireguard/#login-to-server-from-client","text":"pi@routerpi:~$ ssh -i .ssh/dopriveatesshkeyfile geddy@10.14.1.1 geddy@digocean:~$","title":"Login to server from client"},{"location":"wireguard/#login-to-client-from-server","text":"geddy@digocean:~$ ssh pi@10.14.1.2 pi@routerpi:~$","title":"Login to client from server"}]}